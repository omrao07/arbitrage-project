import pandas as pd
from datetime import date
import os

def build_profitability(as_of: str | None = None) -> pd.DataFrame:
    """
    Profitability by region (Damodaran-style rollups).
    Metrics:
      - ROE = Net Income / Equity
      - ROA = Net Income / Assets
      - ROCE ~ EBIT / (Total Assets - Current Liabilities)  (proxy)
      - Margins = item / Revenue
      - Asset Turnover = Revenue / Assets
    """
    if as_of is None:
        as_of = str(date.today())

    rows = [
        # region,          as_of,   roe,  roa,  roce, gross_m, oper_m, ebit_m, net_m, fcf_m, asset_to, notes
        ("United States",   as_of,  0.18, 0.08, 0.14, 0.42,    0.17,   0.16,   0.12,  0.09,  0.80,    "High margins, strong ROE"),
        ("Developed ex-US", as_of,  0.15, 0.07, 0.12, 0.38,    0.15,   0.14,   0.11,  0.08,  0.75,    "Solid profitability"),
        ("Emerging Mkts",   as_of,  0.13, 0.06, 0.11, 0.36,    0.13,   0.12,   0.10,  0.07,  0.65,    "Wider dispersion across countries"),
        ("Frontier Mkts",   as_of,  0.10, 0.05, 0.09, 0.34,    0.12,   0.11,   0.09,  0.06,  0.55,    "Lower margins, thinner liquidity"),
        ("Global Avg",      as_of,  0.16, 0.07, 0.13, 0.39,    0.15,   0.14,   0.11,  0.08,  0.72,    "Weighted profitability composite"),
    ]

    df = pd.DataFrame(rows, columns=[
        "region","as_of","roe","roa","roce",
        "gross_margin","operating_margin","ebit_margin",
        "net_margin","fcf_margin","asset_turnover","notes"
    ])
    return df

if __name__ == "__main__":
    df = build_profitability()
    out_path = "data/adamodar/curated/profitability.csv"
    os.makedirs(os.path.dirname(out_path), exist_ok=True)
    df.to_csv(out_path, index=False)
    print(f"âœ… Profitability dataset written to {out_path}")