import React, { useEffect, useState } from "react";
import axios from "axios";

const LiveHoldingsPanel = () => {
  const [holdings, setHoldings] = useState([]);
  const [refreshing, setRefreshing] = useState(false);

  const fetchHoldings = async () => {
    try {
      setRefreshing(true);
      const response = await axios.get("/api/pnl/holdings"); // Ensure your backend route exists
      setHoldings(response.data);
    } catch (error) {
      console.error("Error fetching holdings:", error);
    } finally {
      setRefreshing(false);
    }
  };

  useEffect(() => {
    fetchHoldings();
    const interval = setInterval(fetchHoldings, 60000); // Refresh every 60s
    return () => clearInterval(interval);
  }, []);

  const formatCurrency = (value) =>
    new Intl.NumberFormat("en-US", {
      style: "currency",
      currency: "USD",
    }).format(value);

  return (
    <div className="bg-white shadow-lg rounded-xl p-4 w-full overflow-x-auto">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-xl font-bold">Live Holdings</h2>
        <button
          onClick={fetchHoldings}
          disabled={refreshing}
          className="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600"
        >
          {refreshing ? "Refreshing..." : "Refresh"}
        </button>
      </div>
      <table className="min-w-full table-auto">
        <thead>
          <tr className="bg-gray-100">
            <th className="text-left px-4 py-2">Asset</th>
            <th className="text-left px-4 py-2">Strategy</th>
            <th className="text-right px-4 py-2">Quantity</th>
            <th className="text-right px-4 py-2">Market Value</th>
            <th className="text-right px-4 py-2">P&L</th>
          </tr>
        </thead>
        <tbody>
          {holdings.map((holding, idx) => (
            <tr key={idx} className="border-b hover:bg-gray-50">
              <td className="px-4 py-2">{holding.asset}</td>
              <td className="px-4 py-2">{holding.strategy}</td>
              <td className="px-4 py-2 text-right">{holding.quantity}</td>
              <td className="px-4 py-2 text-right">{formatCurrency(holding.market_value)}</td>
              <td
                className={`px-4 py-2 text-right font-semibold ${
                  holding.pnl >= 0 ? "text-green-600" : "text-red-500"
                }`}
              >
                {formatCurrency(holding.pnl)}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default LiveHoldingsPanel;