# -----------------------------------------------------------------------------
# Flink Kubernetes Operator â€” Helm values
# Chart: flink-kubernetes-operator
# Namespace: analytics
# -----------------------------------------------------------------------------

fullnameOverride: flink-operator
namespace: analytics

operator:
  image:
    repository: ghcr.io/apache/flink-kubernetes-operator
    tag: "1.8.0"
    pullPolicy: IfNotPresent
  replicas: 1
  serviceAccount:
    create: true
    name: flink-operator
    annotations: {}
      # eks.amazonaws.com/role-arn: arn:aws:iam::<ACCOUNT_ID>:role/hyper-os-sa-flink
      # iam.gke.io/gcp-service-account: flink-operator@<PROJECT_ID>.iam.gserviceaccount.com
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  metrics:
    enabled: true
    port: 9999
  leaderElection:
    enabled: true
    namespace: analytics

# -----------------------------------------------------------------------------
# Default Flink Application Deployment (can be templatized)
# -----------------------------------------------------------------------------
application:
  enabled: true
  name: market-streams
  namespace: analytics
  image:
    repository: ghcr.io/your-org/market-streams
    tag: latest
  serviceAccount: flink-operator
  flinkVersion: v1_18
  mode: native

  jobManager:
    replicas: 1
    resource:
      cpu: 1
      memory: "2048m"
    podTemplate:
      metadata:
        labels:
          app: flink-jm
      spec:
        containers:
          - name: jobmanager
            env:
              - name: JAVA_TOOL_OPTIONS
                value: "-Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts"

  taskManager:
    replicas: 2
    resource:
      cpu: 2
      memory: "4096m"
    podTemplate:
      metadata:
        labels:
          app: flink-tm
      spec:
        containers:
          - name: taskmanager
            env:
              - name: FLINK_TM_HEAP
                value: "3072m"

  job:
    entryClass: com.yourorg.streams.MarketMain  # Java/Scala main class
    parallelism: 4
    state: running
    upgradeMode: stateful
    restartNonce: 1
    jarURI: ""  # use fat JAR image; else point to s3:// or gs://

  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"
    execution.checkpointing.interval: "30s"
    execution.checkpointing.mode: EXACTLY_ONCE
    execution.checkpointing.timeout: "5m"
    execution.checkpointing.min-pause: "5s"
    execution.checkpointing.unaligned: "true"
    execution.checkpointing.tolerable-failed-checkpoints: "3"

    # === State Backend (choose one) ===
    state.backend: rocksdb
    state.checkpoints.dir: s3://REPLACE_S3_BUCKET_curated/flink/checkpoints/
    state.savepoints.dir: s3://REPLACE_S3_BUCKET_curated/flink/savepoints/
    # For GCS:
    # state.checkpoints.dir: gs://REPLACE_GCS_BUCKET_curated/flink/checkpoints/
    # state.savepoints.dir: gs://REPLACE_GCS_BUCKET_curated/flink/savepoints/

    # Prometheus metrics
    metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
    metrics.reporter.prom.port: "9404"

    # Kafka connector (adjust for Flink version)
    pipeline.jars: local:///opt/flink/lib/flink-connector-kafka-1.18.0.jar

  highAvailability:
    type: kubernetes
    # Uses ConfigMaps for leader election metadata by default

# -----------------------------------------------------------------------------
# Ingress (optional for REST UI)
# -----------------------------------------------------------------------------
ingress:
  enabled: false
  className: nginx
  hosts:
    - host: flink.your-domain.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: market-streams-rest
            port: 8081
  tls: []