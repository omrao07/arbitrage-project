name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Avoid duplicate runs on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint & Test (Py3.11)
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -e .[dev]

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (format check)
        run: black --check .

      - name: Mypy (type check)
        run: mypy platform workers research

      - name: Pytest (with coverage)
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          pytest --cov=platform --cov=workers --cov=research --maxfail=2 -q
          coverage xml -o coverage.xml || true

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          file: docker/worker.Dockerfile
          context: .
          push: false
          platforms: linux/amd64
          tags: hf-platform/worker:${{ github.sha }}

      # Optional: push to registry if secrets provided
      - name: Login to registry
        if: ${{ secrets.REGISTRY_USER != '' && secrets.REGISTRY_PASS != '' && vars.REGISTRY != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build & Push (optional)
        if: ${{ secrets.REGISTRY_USER != '' && secrets.REGISTRY_PASS != '' && vars.REGISTRY != '' }}
        uses: docker/build-push-action@v6
        with:
          file: docker/worker.Dockerfile
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ vars.REGISTRY }}/hf-platform/worker:${{ github.sha }}
            ${{ vars.REGISTRY }}/hf-platform/worker:latest