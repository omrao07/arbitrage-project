# =========================================================
# Namespace (optional â€“ remove if you use 'default')
# =========================================================
apiVersion: v1
kind: Namespace
metadata:
  name: hedgefund
---
# =========================================================
# Config (non-secrets). Tune queues, batch sizes, feature flags here.
# =========================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: analyst-worker-config
  namespace: hedgefund
data:
  WORKER_CONCURRENCY: "4"            # number of parallel jobs per pod
  BATCH_SIZE: "100"
  MAX_LATENCY_MS: "2000"
  QUEUE_BACKEND: "redis"             # redis | kafka
  INPUT_TOPICS: "news.raw,news.norm,sentiment.queue"
  OUTPUT_TOPICS: "insights.signals,alerts.insight"
  ENABLE_EXPLAINABILITY: "true"
  ENABLE_ESG: "true"
  LOG_LEVEL: "INFO"
---
# =========================================================
# ServiceAccount + minimal RBAC (for ConfigMaps/Secrets read)
# =========================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: analyst-worker
  namespace: hedgefund
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: analyst-worker-read
  namespace: hedgefund
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: analyst-worker-read
  namespace: hedgefund
subjects:
  - kind: ServiceAccount
    name: analyst-worker
    namespace: hedgefund
roleRef:
  kind: Role
  name: analyst-worker-read
  apiGroup: rbac.authorization.k8s.io
---
# =========================================================
# Deployment
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyst-worker
  namespace: hedgefund
  labels:
    app: hedgefund
    svc: analyst-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hedgefund
      svc: analyst-worker
  template:
    metadata:
      labels:
        app: hedgefund
        svc: analyst-worker
    spec:
      serviceAccountName: analyst-worker
      containers:
        - name: worker
          image: your-registry/hedgefund-analyst:latest
          imagePullPolicy: Always
          # If your worker is a Python module with a CLI entry:
          # e.g., python -m backend.workers.insights_worker --concurrency $(WORKER_CONCURRENCY)
          command: ["python"]
          args:
            - "-m"
            - "backend.workers.insights_worker"
            - "--concurrency=$(WORKER_CONCURRENCY)"
            - "--batch-size=$(BATCH_SIZE)"
            - "--queue=$(QUEUE_BACKEND)"
          env:
            # --- Static config from ConfigMap ---
            - name: WORKER_CONCURRENCY
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: WORKER_CONCURRENCY } }
            - name: BATCH_SIZE
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: BATCH_SIZE } }
            - name: MAX_LATENCY_MS
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: MAX_LATENCY_MS } }
            - name: QUEUE_BACKEND
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: QUEUE_BACKEND } }
            - name: INPUT_TOPICS
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: INPUT_TOPICS } }
            - name: OUTPUT_TOPICS
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: OUTPUT_TOPICS } }
            - name: ENABLE_EXPLAINABILITY
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: ENABLE_EXPLAINABILITY } }
            - name: ENABLE_ESG
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: ENABLE_ESG } }
            - name: LOG_LEVEL
              valueFrom: { configMapKeyRef: { name: analyst-worker-config, key: LOG_LEVEL } }

            # --- Secrets (mount your existing ones or adapt names/keys) ---
            - name: REDIS_HOST
              value: "redis"  # or your hostname
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom: { secretKeyRef: { name: redis-secret, key: redis-password } }

            - name: KAFKA_BROKERS
              value: "kafka:9092"
            - name: KAFKA_USERNAME
              valueFrom: { secretKeyRef: { name: hedgefund-secrets, key: kafka_user } }
            - name: KAFKA_PASSWORD
              valueFrom: { secretKeyRef: { name: hedgefund-secrets, key: kafka_pass } }

            - name: OPENAI_API_KEY
              valueFrom: { secretKeyRef: { name: hedgefund-secrets, key: openai_api_key } }
            - name: HUGGINGFACE_TOKEN
              valueFrom: { secretKeyRef: { name: hedgefund-secrets, key: hf_token } }

            - name: POSTGRES_DSN
              valueFrom: { secretKeyRef: { name: hedgefund-secrets, key: analytics_db_dsn } }

          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "4Gi"

          # Health endpoints: expose simple /health HTTP in the worker (optional)
          ports:
            - name: http
              containerPort: 8080

          readinessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6

          livenessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3

          volumeMounts:
            - name: scratch
              mountPath: /tmp

      volumes:
        - name: scratch
          emptyDir: {}

      restartPolicy: Always
---
# =========================================================
# Optional: Horizontal Pod Autoscaler (CPU-based)
# =========================================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analyst-worker-hpa
  namespace: hedgefund
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analyst-worker
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
# =========================================================
# Optional: Service (only if you expose HTTP /health or metrics)
# =========================================================
apiVersion: v1
kind: Service
metadata:
  name: analyst-worker
  namespace: hedgefund
  labels:
    app: hedgefund
    svc: analyst-worker
spec:
  type: ClusterIP
  selector:
    app: hedgefund
    svc: analyst-worker
  ports:
    - name: http
      port: 8080
      targetPort: 8080